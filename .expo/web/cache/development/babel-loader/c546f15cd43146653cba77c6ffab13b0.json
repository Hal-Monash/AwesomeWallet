{"ast":null,"code":"import React from \"react\";\nimport { List, Image } from \"antd-mobile\";\nimport { List as VirtualizedList, AutoSizer } from \"react-virtualized\";\nimport newDummy from \"../constants/newDummy\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CoinList = function CoinList(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var dataToUse = newDummy.multiCoinStatus;\n  var currentItem = route.params.currentItem;\n\n  var getRowRenderer = function getRowRenderer() {\n    {\n      console.log(currentItem);\n    }\n\n    var navigationReceiveSelect = function navigationReceiveSelect(item) {\n      if (item == \"btc\") return function () {\n        return navigation.navigate(\"Receive\", {\n          currencyItem: dataToUse[0]\n        });\n      };\n      if (item == \"eth\") return function () {\n        return navigation.navigate(\"Receive\", {\n          currencyItem: dataToUse[1]\n        });\n      };\n      if (item == \"xno\") return function () {\n        return navigation.navigate(\"Receive\", {\n          currencyItem: dataToUse[2]\n        });\n      };\n      if (item == \"theta\") return function () {\n        return navigation.navigate(\"Receive\", {\n          currencyItem: dataToUse[3]\n        });\n      };\n      if (item == \"xrp\") return function () {\n        return navigation.navigate(\"Receive\", {\n          currencyItem: dataToUse[4]\n        });\n      };\n    };\n\n    var newReceiveSelect = function newReceiveSelect(item) {\n      return function () {\n        return navigation.navigate(\"Receive\", {\n          currencyItem: dataToUse[dataToUse.map(function (object) {\n            return object.currency;\n          }).indexOf(item.toUpperCase())]\n        });\n      };\n    };\n\n    var navigationSendSelect = function navigationSendSelect(item) {\n      return function () {\n        return navigation.navigate(\"Send To\", {\n          currencyItem: item.toUpperCase()\n        });\n      };\n    };\n\n    return function rowRenderer(_ref2) {\n      var index = _ref2.index,\n          key = _ref2.key,\n          style = _ref2.style;\n      var item = dataToUse[index];\n      return _jsx(List.Item, {\n        style: style,\n        onClick: currentItem.function == \"Send\" ? newReceiveSelect(item.currency.toLowerCase()) : navigationReceiveSelect(item.currency.toLowerCase()),\n        prefix: _jsx(Image, {\n          src: item.icon,\n          style: {\n            borderRadius: 20\n          },\n          fit: \"cover\",\n          width: 40,\n          height: 40\n        }),\n        children: item.description\n      }, key);\n    };\n  };\n\n  return _jsx(View, {\n    children: _jsx(List, {\n      children: _jsx(AutoSizer, {\n        disableHeight: true,\n        children: function children(_ref3) {\n          var width = _ref3.width;\n          return _jsx(VirtualizedList, {\n            rowCount: 5,\n            rowRenderer: getRowRenderer(),\n            width: width,\n            height: 300,\n            rowHeight: 60,\n            overscanRowCount: 10\n          });\n        }\n      })\n    })\n  });\n};\n\nexport default CoinList;","map":{"version":3,"names":["React","List","Image","VirtualizedList","AutoSizer","newDummy","CoinList","route","navigation","dataToUse","multiCoinStatus","currentItem","params","getRowRenderer","console","log","navigationReceiveSelect","item","navigate","currencyItem","newReceiveSelect","map","object","currency","indexOf","toUpperCase","navigationSendSelect","rowRenderer","index","key","style","function","toLowerCase","icon","borderRadius","description","width"],"sources":["/Users/hal/WebstormProjects/AwesomeWallet/screens/CoinList.tsx"],"sourcesContent":["import React, { CSSProperties } from \"react\";\nimport { List, Image } from \"antd-mobile\";\nimport { List as VirtualizedList, AutoSizer } from \"react-virtualized\";\nimport newDummy from \"../constants/newDummy\";\nimport { View } from \"react-native\";\n\nconst CoinList = ({ route, navigation }) => {\n  const dataToUse = newDummy.multiCoinStatus;\n  const { currentItem } = route.params;\n  const getRowRenderer = () => {\n    {\n      console.log(currentItem);\n    }\n    const navigationReceiveSelect = (item) => {\n      if (item == \"btc\")\n        return () =>\n          navigation.navigate(\"Receive\", {\n            currencyItem: dataToUse[0],\n          });\n      if (item == \"eth\")\n        return () =>\n          navigation.navigate(\"Receive\", {\n            currencyItem: dataToUse[1],\n          });\n      if (item == \"xno\")\n        return () =>\n          navigation.navigate(\"Receive\", {\n            currencyItem: dataToUse[2],\n          });\n      if (item == \"theta\")\n        return () =>\n          navigation.navigate(\"Receive\", {\n            currencyItem: dataToUse[3],\n          });\n      if (item == \"xrp\")\n        return () =>\n          navigation.navigate(\"Receive\", {\n            currencyItem: dataToUse[4],\n          });\n    };\n    const newReceiveSelect = (item) => {\n      return () =>\n        navigation.navigate(\"Receive\", {\n          currencyItem:\n            dataToUse[\n              dataToUse\n                .map((object) => object.currency)\n                .indexOf(item.toUpperCase())\n            ],\n        });\n    };\n    const navigationSendSelect = (item) => {\n      return () =>\n        navigation.navigate(\"Send To\", {\n          currencyItem: item.toUpperCase(),\n        });\n    };\n\n    return function rowRenderer({\n      index,\n      key,\n      style,\n    }: {\n      index: number;\n      key: string;\n      style: CSSProperties;\n    }) {\n      const item = dataToUse[index];\n      return (\n        <List.Item\n          key={key}\n          style={style}\n          onClick={\n            currentItem.function == \"Send\"\n              ? newReceiveSelect(item.currency.toLowerCase())\n              : navigationReceiveSelect(item.currency.toLowerCase())\n          }\n          prefix={\n            <Image\n              src={item.icon}\n              style={{ borderRadius: 20 }}\n              fit=\"cover\"\n              width={40}\n              height={40}\n            />\n          }\n        >\n          {item.description}\n        </List.Item>\n      );\n    };\n  };\n\n  return (\n    <View>\n      <List>\n        <AutoSizer disableHeight>\n          {({ width }: { width: number }) => (\n            <VirtualizedList\n              rowCount={5}\n              rowRenderer={getRowRenderer()}\n              width={width}\n              height={300}\n              rowHeight={60}\n              overscanRowCount={10}\n            />\n          )}\n        </AutoSizer>\n      </List>\n    </View>\n  );\n};\n\nexport default CoinList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}