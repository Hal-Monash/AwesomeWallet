{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport { Form, Input } from \"antd-mobile\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { COLORS, SIZES } from \"../constants/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Withdraw = function Withdraw(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactionFee = _useState2[0],\n      setTransactionFee = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      transactionFeeAud = _useState4[0],\n      setTransactionFeeAud = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      SendCrypto = _useState6[0],\n      setSendCrypto = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      SendAud = _useState8[0],\n      setSendAud = _useState8[1];\n\n  var currencyItem = route.params.currencyItem;\n\n  var _useState9 = useState(currencyItem),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentCurrency = _useState10[0],\n      setCurrentCurrency = _useState10[1];\n\n  var onTransToAud = function onTransToAud(e) {\n    console.log(currencyItem);\n\n    if (currentCurrency == \"BTC\") {\n      var temp = +e;\n      temp = temp * 1046.48;\n      if (temp == 0) temp = null;\n\n      if (e.toString() == transactionFee) {\n        setTransactionFeeAud(String(temp));\n        setCurrentCurrency(\"AUD\");\n      }\n    }\n  };\n\n  var onTransToCrypto = function onTransToCrypto(e) {\n    console.log(currencyItem);\n    console.log(currentCurrency);\n\n    if (currentCurrency == \"AUD\") {\n      var temp = +transactionFeeAud;\n      temp = temp / 1046.48;\n      if (temp == 0) temp = null;\n\n      if (e.toString() == transactionFee) {\n        setTransactionFee(String(temp));\n        setCurrentCurrency(currencyItem);\n      }\n    }\n  };\n\n  return _jsx(View, {\n    style: _objectSpread({\n      marginTop: SIZES.padding,\n      marginHorizontal: SIZES.padding,\n      padding: SIZES.padding,\n      borderRadius: SIZES.radius,\n      backgroundColor: COLORS.white\n    }, styles.shadow),\n    children: _jsxs(Form, {\n      layout: \"horizontal\",\n      children: [_jsx(View, {\n        children: _jsx(Form.Item, {\n          extra: _jsx(\"div\", {\n            children: _jsx(\"a\", {\n              children: \"PASTE\"\n            })\n          }),\n          children: _jsx(Input, {\n            placeholder: \"Recipient Address\",\n            clearable: true\n          })\n        })\n      }), currentCurrency != \"AUD\" && _jsx(View, {\n        children: _jsx(Form.Item, {\n          extra: _jsxs(\"div\", {\n            children: [_jsx(\"a\", {\n              style: {\n                marginRight: 20\n              },\n              children: \"MAX \"\n            }), _jsx(\"a\", {\n              children: currentCurrency\n            })]\n          }),\n          children: _jsx(Input, {\n            placeholder: \"Amount\",\n            clearable: true,\n            onChange: function onChange(e) {\n              return setSendCrypto(e);\n            }\n          })\n        })\n      }), currentCurrency == \"AUD\" && _jsx(View, {\n        children: _jsx(Form.Item, {\n          extra: _jsxs(\"div\", {\n            children: [_jsx(\"a\", {\n              style: {\n                marginRight: 20\n              },\n              children: \"MAX \"\n            }), _jsx(\"a\", {\n              children: currentCurrency\n            })]\n          }),\n          children: _jsx(Input, {\n            placeholder: \"Amount\",\n            clearable: true,\n            onChange: function onChange(e) {\n              return setSendAud(e);\n            }\n          })\n        })\n      }), currentCurrency != \"AUD\" && _jsx(View, {\n        children: _jsx(Form.Item, {\n          extra: _jsx(\"div\", {\n            children: _jsx(\"a\", {\n              onClick: function onClick() {\n                onTransToAud(transactionFee);\n              },\n              children: currentCurrency\n            })\n          }),\n          children: _jsx(Input, {\n            placeholder: \"Transaction Fee\",\n            clearable: true,\n            type: \"number\",\n            onChange: function onChange(e) {\n              return setTransactionFee(e);\n            },\n            value: transactionFee\n          })\n        })\n      }), currentCurrency == \"AUD\" && _jsx(View, {\n        children: _jsx(Form.Item, {\n          extra: _jsx(\"div\", {\n            children: _jsx(\"a\", {\n              onClick: function onClick(transactionFee) {\n                return tonTransToCrypto(transactionFee);\n              },\n              children: \"AUD\"\n            })\n          }),\n          children: _jsx(Input, {\n            placeholder: \"Transaction Fee\",\n            clearable: true,\n            type: \"number\",\n            onChange: function onChange(e) {\n              return setTransactionFeeAud(e);\n            },\n            value: transactionFeeAud\n          })\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    }\n  }\n});\nexport default Withdraw;","map":{"version":3,"names":["React","useState","Form","Input","COLORS","SIZES","Withdraw","route","transactionFee","setTransactionFee","transactionFeeAud","setTransactionFeeAud","SendCrypto","setSendCrypto","SendAud","setSendAud","currencyItem","params","currentCurrency","setCurrentCurrency","onTransToAud","e","console","log","temp","toString","String","onTransToCrypto","marginTop","padding","marginHorizontal","borderRadius","radius","backgroundColor","white","styles","shadow","marginRight","tonTransToCrypto","StyleSheet","create","shadowColor","shadowOffset","width","height"],"sources":["/Users/hal/WebstormProjects/AwesomeWallet/screens/Withdraw.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input } from \"antd-mobile\";\nimport {\n  View,\n  SafeAreaView,\n  Text,\n  Image,\n  StyleSheet,\n  StatusBar,\n  TouchableOpacity,\n  Dimensions,\n  ScrollView,\n  PixelRatio,\n} from \"react-native\";\nimport { COLORS, SIZES, FONTS } from \"../constants/theme\";\nimport _ from \"lodash\";\nimport { newDummyData } from \"../index\";\n\nconst Withdraw = ({ route }) => {\n  const [transactionFee, setTransactionFee] = useState(\"\");\n  const [transactionFeeAud, setTransactionFeeAud] = useState(\"\");\n  const [SendCrypto, setSendCrypto] = useState(\"\");\n  const [SendAud, setSendAud] = useState(\"\");\n  const { currencyItem } = route.params;\n  const [currentCurrency, setCurrentCurrency] = useState(currencyItem);\n  const onTransToAud = (e) => {\n    console.log(currencyItem);\n    if (currentCurrency == \"BTC\") {\n      let temp: number = +e;\n      temp = temp * 1046.48;\n      if (temp == 0) temp = null;\n      if (e.toString() == transactionFee) {\n        setTransactionFeeAud(String(temp));\n        setCurrentCurrency(\"AUD\");\n      }\n      // if (e.toString() == SendCrypto) {\n      //   setSendAud(String(temp));\n      //   setCurrentCurrency(\"AUD\");\n      // }\n    }\n  };\n  const onTransToCrypto = (e) => {\n    console.log(currencyItem);\n    console.log(currentCurrency);\n    if (currentCurrency == \"AUD\") {\n      let temp: number = +transactionFeeAud;\n      temp = temp / 1046.48;\n      if (temp == 0) temp = null;\n      if (e.toString() == transactionFee) {\n        setTransactionFee(String(temp));\n        setCurrentCurrency(currencyItem);\n      }\n      // if (e.toString() == SendCrypto) {\n      //   setSendCrypto(String(temp));\n      //   setCurrentCurrency(currencyItem);\n      // }\n    }\n  };\n\n  return (\n    <View\n      style={{\n        marginTop: SIZES.padding,\n        marginHorizontal: SIZES.padding,\n        padding: SIZES.padding,\n        borderRadius: SIZES.radius,\n        backgroundColor: COLORS.white,\n        ...styles.shadow,\n      }}\n    >\n      <Form layout=\"horizontal\">\n        <View>\n          <Form.Item\n            extra={\n              <div>\n                <a>PASTE</a>\n              </div>\n            }\n          >\n            <Input placeholder=\"Recipient Address\" clearable />\n          </Form.Item>\n        </View>\n        {currentCurrency != \"AUD\" && (\n          <View>\n            <Form.Item\n              extra={\n                <div>\n                  <a style={{ marginRight: 20 }}>MAX </a>\n                  <a>{currentCurrency}</a>\n                </div>\n              }\n            >\n              <Input\n                placeholder=\"Amount\"\n                clearable\n                onChange={(e) => setSendCrypto(e)}\n              />\n            </Form.Item>\n          </View>\n        )}\n        {currentCurrency == \"AUD\" && (\n          <View>\n            <Form.Item\n              extra={\n                <div>\n                  <a style={{ marginRight: 20 }}>MAX </a>\n                  <a>{currentCurrency}</a>\n                </div>\n              }\n            >\n              <Input\n                placeholder=\"Amount\"\n                clearable\n                onChange={(e) => setSendAud(e)}\n              />\n            </Form.Item>\n          </View>\n        )}\n        {currentCurrency != \"AUD\" && (\n          <View>\n            <Form.Item\n              extra={\n                <div>\n                  <a\n                    onClick={() => {\n                      onTransToAud(transactionFee);\n                    }}\n                  >\n                    {currentCurrency}\n                  </a>\n                </div>\n              }\n            >\n              <Input\n                placeholder=\"Transaction Fee\"\n                clearable\n                type={\"number\"}\n                onChange={(e) => setTransactionFee(e)}\n                value={transactionFee}\n              />\n            </Form.Item>\n          </View>\n        )}\n        {currentCurrency == \"AUD\" && (\n          <View>\n            <Form.Item\n              extra={\n                <div>\n                  <a\n                    onClick={(transactionFee) =>\n                      tonTransToCrypto(transactionFee)\n                    }\n                  >\n                    AUD\n                  </a>\n                </div>\n              }\n            >\n              <Input\n                placeholder=\"Transaction Fee\"\n                clearable\n                type={\"number\"}\n                onChange={(e) => setTransactionFeeAud(e)}\n                value={transactionFeeAud}\n              />\n            </Form.Item>\n          </View>\n        )}\n      </Form>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n  },\n});\n\nexport default Withdraw;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}