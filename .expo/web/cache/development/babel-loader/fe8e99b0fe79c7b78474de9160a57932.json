{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport TokenList from \"../parts/TokenList\";\nimport { newDummyData, COLORS, SIZES, FONTS, icons, images } from \"../index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TransactionPage = function TransactionPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(newDummyData.multiFunctions),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      functions = _React$useState2[0],\n      setFunctions = _React$useState2[1];\n\n  var _React$useState3 = React.useState(newDummyData.multiCoinStatus),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      TokenLists = _React$useState4[0],\n      setTokenLists = _React$useState4[1];\n\n  React.useEffect(function () {\n    LogBox.ignoreLogs([\"VirtualizedLists should never be nested\"]);\n  }, []);\n\n  function renderHeader() {\n    var renderItem = function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return _jsxs(TouchableOpacity, {\n        style: {\n          borderWidth: 1,\n          borderColor: \"rgba(0,0,0,0.2)\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: 100,\n          borderRadius: 50,\n          width: 180,\n          paddingVertical: SIZES.padding,\n          paddingHorizontal: SIZES.padding,\n          marginLeft: index == 0 ? SIZES.padding : 0,\n          marginRight: SIZES.radius,\n          borderRadius: 10,\n          backgroundColor: COLORS.white\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"CryptoDetail\");\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"column\"\n          },\n          children: [_jsx(View, {\n            children: _jsx(Image, {\n              source: item.image,\n              resizeMode: \"cover\",\n              style: {\n                marginTop: 5,\n                width: 25,\n                height: 25\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginLeft: SIZES.base\n            },\n            children: _jsx(Text, {\n              style: _objectSpread({}, FONTS.h2),\n              children: item.function\n            })\n          })]\n        }), _jsxs(View, {\n          style: {\n            marginTop: SIZES.radius\n          },\n          children: [_jsxs(Text, {\n            style: _objectSpread({}, FONTS.h2),\n            children: [\"$\", item.amount]\n          }), _jsx(Text, {\n            style: {\n              color: item.type == \"I\" ? COLORS.green : COLORS.red\n            },\n            children: item.changes\n          })]\n        })]\n      });\n    };\n\n    return _jsx(View, {\n      style: _objectSpread({\n        width: \"100%\",\n        height: 290\n      }, styles.shadow),\n      children: _jsxs(ImageBackground, {\n        source: images.banner,\n        resizeMode: \"cover\",\n        style: {\n          flex: 1,\n          alignItems: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            marginTop: SIZES.padding,\n            width: \"100%\",\n            alignItems: \"flex-end\",\n            paddingHorizontal: SIZES.padding\n          },\n          children: _jsx(TouchableOpacity, {\n            style: {\n              width: 35,\n              height: 35,\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            onPress: function onPress() {\n              return console.log(\"Notification on pressed\");\n            },\n            children: _jsx(Image, {\n              source: icons.notification_white,\n              resizeMode: \"contain\",\n              style: {\n                flex: 1\n              }\n            })\n          })\n        }), _jsxs(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Text, {\n            style: _objectSpread({\n              color: COLORS.white\n            }, FONTS.h3),\n            children: \"Your Portfolio Balance\"\n          }), _jsxs(Text, {\n            style: _objectSpread({\n              marginTop: SIZES.base,\n              color: COLORS.white\n            }, FONTS.h1),\n            children: [\"$\", newDummyData.portfolio.balance]\n          }), _jsxs(Text, {\n            style: _objectSpread({\n              color: COLORS.white\n            }, FONTS.body5),\n            children: [\"+\", newDummyData.portfolio.changes, \"% Last 24 hours\"]\n          })]\n        }), _jsx(View, {\n          style: {\n            position: \"absolute\",\n            bottom: \"-15%\"\n          },\n          children: _jsx(FlatList, {\n            contentContainerStyle: {\n              marginTop: SIZES.base\n            },\n            data: functions,\n            renderItem: renderItem,\n            keyExtractor: function keyExtractor(item) {\n              return \"\" + item.id;\n            },\n            horizontal: true,\n            showsHorizontalScrollIndicator: false\n          })\n        })]\n      })\n    });\n  }\n\n  function renderTokenList() {\n    return _jsx(TokenList, {\n      navigation: navigation,\n      customContainerStyle: _objectSpread({}, styles.shadow),\n      history: TokenLists\n    });\n  }\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        paddingBottom: 130\n      },\n      children: [renderHeader(), renderTokenList()]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  }\n});\nexport default TransactionPage;","map":{"version":3,"names":["React","TokenList","newDummyData","COLORS","SIZES","FONTS","icons","images","TransactionPage","navigation","useState","multiFunctions","functions","setFunctions","multiCoinStatus","TokenLists","setTokenLists","useEffect","LogBox","ignoreLogs","renderHeader","renderItem","item","index","borderWidth","borderColor","alignItems","justifyContent","height","borderRadius","width","paddingVertical","padding","paddingHorizontal","marginLeft","marginRight","radius","backgroundColor","white","navigate","flexDirection","image","marginTop","base","h2","function","amount","color","type","green","red","changes","styles","shadow","banner","flex","console","log","notification_white","h3","h1","portfolio","balance","body5","position","bottom","id","renderTokenList","paddingBottom","StyleSheet","create","container","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["/Users/hal/WebstormProjects/AwesomeWallet/screens/TransactionPage.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  FlatList,\n  TouchableOpacity,\n  Image,\n  ImageBackground,\n  LogBox,\n} from \"react-native\";\nimport TokenList from \"../parts/TokenList\";\nimport { newDummyData, COLORS, SIZES, FONTS, icons, images } from \"../index\";\n\nconst TransactionPage = ({ navigation }) => {\n  const [functions, setFunctions] = React.useState(newDummyData.multiFunctions);\n  const [TokenLists, setTokenLists] = React.useState(\n    newDummyData.multiCoinStatus\n  );\n\n  React.useEffect(() => {\n    LogBox.ignoreLogs([\"VirtualizedLists should never be nested\"]);\n  }, []);\n\n  function renderHeader() {\n    const renderItem = ({ item, index }) => (\n      <TouchableOpacity\n        style={{\n          borderWidth: 1,\n          borderColor: \"rgba(0,0,0,0.2)\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: 100,\n          borderRadius: 50,\n\n          width: 180,\n          paddingVertical: SIZES.padding,\n          paddingHorizontal: SIZES.padding,\n          marginLeft: index == 0 ? SIZES.padding : 0,\n          marginRight: SIZES.radius,\n          borderRadius: 10,\n          backgroundColor: COLORS.white,\n        }}\n        onPress={() => navigation.navigate(\"CryptoDetail\")}\n      >\n        <View style={{ flexDirection: \"column\" }}>\n          <View>\n            <Image\n              source={item.image}\n              resizeMode=\"cover\"\n              style={{\n                marginTop: 5,\n                width: 25,\n                height: 25,\n              }}\n            />\n          </View>\n          <View style={{ marginLeft: SIZES.base }}>\n            <Text style={{ ...FONTS.h2 }}>{item.function}</Text>\n            {/*<Text style={{ color: COLORS.gray, ...FONTS.body3 }}>*/}\n            {/*  {item.code}*/}\n            {/*</Text>*/}\n          </View>\n        </View>\n        {/* Value */}\n        <View style={{ marginTop: SIZES.radius }}>\n          <Text style={{ ...FONTS.h2 }}>${item.amount}</Text>\n          <Text style={{ color: item.type == \"I\" ? COLORS.green : COLORS.red }}>\n            {item.changes}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 290,\n          ...styles.shadow,\n        }}\n      >\n        <ImageBackground\n          source={images.banner}\n          resizeMode=\"cover\"\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n          }}\n        >\n          {/* Header Bar */}\n          <View\n            style={{\n              marginTop: SIZES.padding,\n              width: \"100%\",\n              alignItems: \"flex-end\",\n              paddingHorizontal: SIZES.padding,\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: 35,\n                height: 35,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => console.log(\"Notification on pressed\")}\n            >\n              <Image\n                source={icons.notification_white}\n                resizeMode=\"contain\"\n                style={{ flex: 1 }}\n              />\n            </TouchableOpacity>\n          </View>\n          {/* Balance */}\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ color: COLORS.white, ...FONTS.h3 }}>\n              Your Portfolio Balance\n            </Text>\n            <Text\n              style={{\n                marginTop: SIZES.base,\n                color: COLORS.white,\n                ...FONTS.h1,\n              }}\n            >\n              ${newDummyData.portfolio.balance}\n            </Text>\n            <Text\n              style={{\n                color: COLORS.white,\n                ...FONTS.body5,\n              }}\n            >\n              +{newDummyData.portfolio.changes}% Last 24 hours\n            </Text>\n          </View>\n          <View\n            style={{\n              position: \"absolute\",\n              bottom: \"-15%\",\n            }}\n          >\n            <FlatList\n              contentContainerStyle={{\n                marginTop: SIZES.base,\n              }}\n              data={functions}\n              renderItem={renderItem}\n              keyExtractor={(item) => `${item.id}`}\n              horizontal\n              showsHorizontalScrollIndicator={false}\n            />\n          </View>\n        </ImageBackground>\n      </View>\n    );\n  }\n\n  function renderTokenList() {\n    return (\n      <TokenList\n        navigation={navigation}\n        customContainerStyle={{ ...styles.shadow }}\n        history={TokenLists}\n      />\n    );\n  }\n  return (\n    <ScrollView>\n      <View style={{ flex: 1, paddingBottom: 130 }}>\n        {renderHeader()}\n        {renderTokenList()}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8,\n  },\n});\n\nexport default TransactionPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}